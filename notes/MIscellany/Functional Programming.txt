THIS ILLUSTRATES THE POWER OF FIRST CLASS FUNCTIONS IN JAVASCRIPT:
function mapping(arr,fn)
{
  var newArr=[];
   for(var i=0;i<arr.length;i++)
   {  //passing array values as arguments to different functions which do different work.
      //classic example of functional programming
      newArr.push(fn(arr[i]));
   }
   return newArr;
}
var arr=[1,2,3];

var arr1=mapping(arr,function(item){
   return item*3;
});

var arr2=mapping(arr,function(item){
   return item>2;
});
console.log(arr1);
console.log(arr2);

OUTPUT:
[3,6,9]
[false, false, true]
I am taking advantage of first class functions to segment my program into cleaner and more readable code 
as shown  above.



FUNCTIONAL PROGRAMMING TO IMPLEMENT _.filter() method of UNDERSCORE.JS:

var arr=[2,3,4,5,6,7,8];

function filterArray(arr,func)
{

    var newArr=[];
    for(var i=0;i<arr.length;i++)
    {
        newArr.push(func(arr[i]));
    }

    return newArr;
}

var arr1=filterArray(arr,function(item){
   return item%2===0;
});

console.log(arr1);

OUTPUT:
[true, false, true, false, true, false, true]